{"version":3,"sources":["./src/app/app.component.html","./src/app/estadisticas/estadisticas.component.html","./src/app/factura/factura.component.html","./src/app/home/home.component.html","./src/app/meseros/meseros-delete/meseros-delete.component.html","./src/app/meseros/meseros-form/meseros-form.component.html","./src/app/meseros/meseros.component.html","./src/app/nav-menu/nav-menu.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/estadisticas/estadisticas.component.css","./src/app/estadisticas/estadisticas.component.ts","./src/app/estadisticas/estadisticas.service.ts","./src/app/factura/factura.component.ts","./src/app/factura/facturas.service.ts","./src/app/home/home.component.ts","./src/app/meseros/meseros-delete/meseros-delete.component.css","./src/app/meseros/meseros-delete/meseros-delete.component.ts","./src/app/meseros/meseros-form/meseros-form.component.css","./src/app/meseros/meseros-form/meseros-form.component.ts","./src/app/meseros/meseros.component.css","./src/app/meseros/meseros.component.ts","./src/app/meseros/meseros.service.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Estadisticas</h1>\\r\\n\\r\\n<h3>Consultar ventas por cada Mesero</h3>\\r\\n\\r\\n<form class=\\\"form-horizontal\\\" novalidate\\r\\n      (ngSubmit)=\\\"consultarVentasMeseros()\\\" [formGroup]=\\\"formGroup\\\">\\r\\n  <fieldset>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('fechaVentasMeseros').touched || formGroup.get('fechaVentasMeseros').dirty) && !formGroup.get('fechaVentasMeseros').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"fechaVentasMeseros\\\">Fecha de Consulta</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"fechaVentasMeseros\\\"\\r\\n               type=\\\"date\\\"\\r\\n               required\\r\\n               formControlName=\\\"fechaVentasMeseros\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('fechaVentasMeseros').touched || formGroup.get('fechaVentasMeseros').dirty) && formGroup.get('fechaVentasMeseros').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('fechaVentasMeseros').errors.required\\\">\\r\\n            El campo es requerido para la consulta.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n        <span>\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"!formGroup.valid\\\">\\r\\n            Consultar\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\\r\\n<p *ngIf=\\\"!ventas\\\"><em></em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"ventas\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Identificacion</th>\\r\\n      <th>Nombres</th>\\r\\n      <th>Apellidos</th>\\r\\n      <th>Total</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let venta of ventas\\\">\\r\\n      <td> {{ venta.idMesero }}</td>\\r\\n      <td> {{ venta.nombres }}</td>\\r\\n      <td> {{ venta.apellidos }}</td>\\r\\n      <td> {{ venta.total }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n<h3>Consultar Consumo de Clientes</h3>\\r\\n\\r\\n<form class=\\\"form-horizontal\\\" novalidate\\r\\n      (ngSubmit)=\\\"consultarConsumoClientes()\\\" [formGroup]=\\\"formGroup1\\\">\\r\\n  <fieldset>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup1.get('fecha').touched || formGroup1.get('fecha').dirty) && !formGroup1.get('fecha').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"fecha\\\">Fecha de Consulta</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"fecha\\\"\\r\\n               type=\\\"date\\\"\\r\\n               required\\r\\n               formControlName=\\\"fecha\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup1.get('fecha').touched || formGroup1.get('fecha').dirty) && formGroup1.get('fecha').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup1.get('fecha').errors.required\\\">\\r\\n            El campo es requerido para la consulta.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup1.get('valor').touched || formGroup1.get('valor').dirty) && !formGroup1.get('valor').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"valor\\\">Valor de Consumo</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"valor\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"valor\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup1.get('valor').touched || formGroup1.get('valor').dirty) && formGroup1.get('valor').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup1.get('valor').errors.required\\\">\\r\\n            El campo es requerido para la consulta.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n        <span>\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"!formGroup1.valid\\\">\\r\\n            Consultar\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\\r\\n<p *ngIf=\\\"!consumos\\\"><em></em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"consumos\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Identificacion</th>\\r\\n      <th>Nombres</th>\\r\\n      <th>Apellidos</th>\\r\\n      <th>Total Consumo</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let consumo of consumos\\\">\\r\\n      <td> {{ consumo.idCliente }}</td>\\r\\n      <td> {{ consumo.nombres }}</td>\\r\\n      <td> {{ consumo.apellidos }}</td>\\r\\n      <td> {{ consumo.valorConsumo }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n<h3>Consultar Producto mas Vendido</h3>\\r\\n\\r\\n<form class=\\\"form-horizontal\\\" novalidate\\r\\n      (ngSubmit)=\\\"consultarProductosTop()\\\" [formGroup]=\\\"formGroup2\\\">\\r\\n  <fieldset>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup2.get('fechaInicio').touched || formGroup2.get('fechaInicio').dirty) && !formGroup2.get('fechaInicio').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"fechaInicio\\\">Fecha de Consulta</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"fechaInicio\\\"\\r\\n               type=\\\"date\\\"\\r\\n               required\\r\\n               formControlName=\\\"fechaInicio\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup2.get('fechaInicio').touched || formGroup2.get('fechaInicio').dirty) && formGroup2.get('fechaInicio').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup2.get('fechaInicio').errors.required\\\">\\r\\n            El campo es requerido para la consulta.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n        <span>\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"!formGroup2.valid\\\">\\r\\n            Consultar\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\\r\\n<p *ngIf=\\\"!productoTop\\\"><em></em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"productoTop\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Plato</th>\\r\\n      <th>Cantidad</th>\\r\\n      <th>Valor Total</th>\\r\\n      <th>Periodo</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let producto of productoTop\\\">\\r\\n      <td> {{ producto.plato }}</td>\\r\\n      <td> {{ producto.cantidad }}</td>\\r\\n      <td> {{ producto.valorTotal }}</td>\\r\\n      <td> {{ producto.periodo }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<h1>Registro de Facturas</h1>\\r\\n\\r\\n<form class=\\\"form-horizontal\\\" novalidate\\r\\n      (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"formGroup\\\">\\r\\n  <fieldset>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"agregarDetalle()\\\">Agregar Detalle</button>\\r\\n    </div>\\r\\n\\r\\n    <div formArrayName=\\\"detalles\\\"\\r\\n         *ngFor=\\\"let detalle of formGroup.get('detalles').controls; let i = index;\\\">\\r\\n      <div [formGroupName]=\\\"i\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-2 control-label\\\" [attr.for]=\\\"'plato' + i\\\">\\r\\n            Plato\\r\\n          </label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input class=\\\"form-control\\\" [attr.id]=\\\"'plato' + i\\\" type=\\\"text\\\" formControlName=\\\"plato\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-2 control-label\\\" [attr.for]=\\\"'valor' + i\\\">\\r\\n            Precio\\r\\n          </label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input class=\\\"form-control\\\" [attr.id]=\\\"'valor' + i\\\" type=\\\"text\\\" formControlName=\\\"valor\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-md-10\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger pull-right\\\" (click)=\\\"removerDetalle(i)\\\">Remover</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <h3>Supervisor</h3>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('idSupervisor').touched || formGroup.get('idSupervisor').dirty) && !formGroup.get('idSupervisor').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"idSupervisor\\\">Identificacion</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"idSupervisor\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"idSupervisor\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('idSupervisor').touched || formGroup.get('idSupervisor').dirty) && formGroup.get('idSupervisor').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('idSupervisor').errors.required\\\">\\r\\n            El campo Identificacion es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <h3>Registro Datos del Cliente</h3>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('idCliente').touched || formGroup.get('idCliente').dirty) && !formGroup.get('idCliente').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"idMesero\\\">ID del Cliente</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"idCliente\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"idCliente\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('idCliente').touched || formGroup.get('idCliente').dirty) && formGroup.get('idCliente').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('idCliente').errors.required\\\">\\r\\n            El campo Identificacion es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('nombres').touched || formGroup.get('nombres').dirty) && !formGroup.get('nombres').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"nombres\\\">Nombres</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"nombres\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"nombres\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('nombres').touched || formGroup.get('nombres').dirty) && formGroup.get('nombres').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('nombres').errors.required\\\">\\r\\n            El campo Nombres es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('apellidos').touched || formGroup.get('apellidos').dirty) && !formGroup.get('apellidos').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"apellidos\\\">Apellidos</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"apellidos\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"apellidos\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('apellidos').touched || formGroup.get('apellidos').dirty) && formGroup.get('apellidos').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('apellidos').errors.required\\\">\\r\\n            El campo Apellidos es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('direccion').touched || formGroup.get('direccion').dirty) && !formGroup.get('direccion').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"direccion\\\">Direccion</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"direccion\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"direccion\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('direccion').touched || formGroup.get('direccion').dirty) && formGroup.get('direccion').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('direccion').errors.required\\\">\\r\\n            El campo Direccion es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('telefono').touched || formGroup.get('telefono').dirty) && !formGroup.get('telefono').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"telefono\\\">Telefono</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"telefono\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"telefono\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('telefono').touched || formGroup.get('telefono').dirty) && formGroup.get('telefono').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('telefono').errors.required\\\">\\r\\n            El campo Telefono es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <h3>Registro Datos Adicionales</h3>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('nroMesa').touched || formGroup.get('nroMesa').dirty) && !formGroup.get('nroMesa').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"nroMesa\\\">Numero de la Mesa</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"nroMesa\\\"\\r\\n               type=\\\"number\\\"\\r\\n               required\\r\\n               formControlName=\\\"nroMesa\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('nroMesa').touched || formGroup.get('nroMesa').dirty) && formGroup.get('nroMesa').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('nroMesa').errors.required\\\">\\r\\n            El campo es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('idMesero').touched || formGroup.get('idMesero').dirty) && !formGroup.get('idMesero').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"idMesero\\\">ID del Mesero</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"idMesero\\\"\\r\\n               type=\\\"number\\\"\\r\\n               required\\r\\n               formControlName=\\\"idMesero\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('idMesero').touched || formGroup.get('idMesero').dirty) && formGroup.get('idMesero').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('idMesero').errors.required\\\">\\r\\n            El campo es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n        <span>\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"!formGroup.valid\\\">\\r\\n            Registrar\\r\\n          </button>\\r\\n        </span>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\"","export default \"<h1>Comidas Típicas del Sur</h1>\\r\\n<p>Aplicación Web desarrollada en .NET y Angular 8, que permita registrar las facturas de las ventas realizadas en el restaurante Comidas Típicas del Sur.</p>\\r\\n<h3>Requerimientos:</h3>\\r\\n<ul>\\r\\n  <li>Creación de facturas que permita registrar el Cliente, el Mesero que atendió la mesa y los platos consumidos.</li>\\r\\n  <li>Funcionalidad que permita desplegar las siguientes consultas, permitiéndole al usuario seleccionar el periodo de tiempo requerido para la consulta (1 mes o un rango de varios meses):\\r\\n    <ul>\\r\\n      <li>Total (suma) vendido por cada mesero (incluyendo los que no hayan realizado ventas), así como sus datos de nombres y apellidos.</li>\\r\\n      <li>Consulta que despliegue los Clientes con consumos superiores o iguales al valor digitado por el usuario final (deb ser un valor de entrada a la consulta).</li>\\r\\n      <li>Producto mas vendido en el restaurante, indicando cantidad de platos vendidos así como el monto total facturado en un mes específico.</li>\\r\\n    </ul>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","export default \"<h4>¿Esta seguro que desea eliminiar este Mesero?</h4>\\r\\n<p>Esta accion no puede deshacerse.</p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"delete()\\\" style=\\\"margin: 5px\\\">Aceptar</button>\\r\\n<button class=\\\"btn btn-danger\\\" type=\\\"button\\\" [routerLink]='[\\\"/meseros\\\"]' style=\\\"margin: 5px\\\">Cancelar</button>\\r\\n\"","export default \"<h1>{{modoEdicion ? 'Editar' : 'Agregar'}}  Mesero</h1>\\r\\n<form class=\\\"form-horizontal\\\" novalidate\\r\\n      (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"formGroup\\\">\\r\\n  <fieldset>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('idMesero').touched || formGroup.get('idMesero').dirty) && !formGroup.get('idMesero').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"idMesero\\\">Identificacion</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"idMesero\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"idMesero\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('idMesero').touched || formGroup.get('idMesero').dirty) && formGroup.get('idMesero').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('idMesero').errors.required\\\">\\r\\n            El campo Identificacion es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('nombres').touched || formGroup.get('nombres').dirty) && !formGroup.get('nombres').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"nombres\\\">Nombres</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"nombres\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"nombres\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('nombres').touched || formGroup.get('nombres').dirty) && formGroup.get('nombres').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('nombres').errors.required\\\">\\r\\n            El campo Nombres es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('apellidos').touched || formGroup.get('apellidos').dirty) && !formGroup.get('apellidos').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"apellidos\\\">Apellidos</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"apellidos\\\"\\r\\n               type=\\\"text\\\"\\r\\n               required\\r\\n               formControlName=\\\"apellidos\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('apellidos').touched || formGroup.get('apellidos').dirty) && formGroup.get('apellidos').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('apellidos').errors.required\\\">\\r\\n            El campo Apellidos es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('edad').touched || formGroup.get('edad').dirty) && !formGroup.get('edad').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"edad\\\">Edad</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"edad\\\"\\r\\n               type=\\\"number\\\"\\r\\n               required\\r\\n               formControlName=\\\"edad\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('edad').touched || formGroup.get('edad').dirty) && formGroup.get('edad').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('edad').errors.required\\\">\\r\\n            El campo Edad es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{'has-error': (formGroup.get('antiguedad').touched || formGroup.get('antiguedad').dirty) && !formGroup.get('antiguedad').valid }\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\"\\r\\n             for=\\\"antiguedad\\\">Antiguedad</label>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\"\\r\\n               id=\\\"antiguedad\\\"\\r\\n               type=\\\"number\\\"\\r\\n               required\\r\\n               formControlName=\\\"antiguedad\\\" />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"(formGroup.get('antiguedad').touched || formGroup.get('antiguedad').dirty) && formGroup.get('antiguedad').errors\\\">\\r\\n          <span *ngIf=\\\"formGroup.get('antiguedad').errors.required\\\">\\r\\n            El campo Antiguedad es requerido.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n        <span>\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"!formGroup.valid\\\" style=\\\"margin: 5px\\\">\\r\\n            {{modoEdicion ? 'Actualizar' : 'Registrar'}}\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-danger\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  [routerLink]='[\\\"/meseros\\\"]' style=\\\"margin: 5px\\\">\\r\\n            Cancelar\\r\\n          </button>\\r\\n        </span>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\"","export default \"<h1>Meseros</h1>\\r\\n\\r\\n<p><button [routerLink]='[\\\"/meseros-agregar\\\"]' class=\\\"btn btn-primary\\\">Agregar Mesero</button></p>\\r\\n\\r\\n<p *ngIf=\\\"!meseros\\\"><em>Cargando...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"meseros\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Identificacion</th>\\r\\n      <th>Nombres</th>\\r\\n      <th>Apellidos</th>\\r\\n      <th>Edad</th>\\r\\n      <th>Antiguedad</th>\\r\\n      <th>Acciones</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let mesero of meseros\\\">\\r\\n      <td> {{ mesero.idMesero }}</td>\\r\\n      <td> {{ mesero.nombres }}</td>\\r\\n      <td> {{ mesero.apellidos }}</td>\\r\\n      <td> {{ mesero.edad }}</td>\\r\\n      <td> {{ mesero.antiguedad }} Meses</td>\\r\\n      <td>\\r\\n        <button class=\\\"btn btn-primary\\\" [routerLink]='[\\\"/meseros-editar/\\\" + mesero.idMesero]' style=\\\"margin: 5px\\\">Editar</button>\\r\\n        <button class=\\\"btn btn-danger\\\" [routerLink]='[\\\"/meseros-eliminar/\\\" + mesero.idMesero]' style=\\\"margin: 5px\\\">Eliminar</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Comidas Típicas del Sur</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Inicio</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/meseros']\\\"\\r\\n              >Meseros</a\\r\\n            >\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/registrar-factura']\\\"\\r\\n              >Registrar Factura</a\\r\\n            >\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/estadisticas']\\\"\\r\\n              >Estadisticas</a\\r\\n            >\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FacturaComponent } from './factura/factura.component';\r\nimport { MeserosComponent } from './meseros/meseros.component';\r\nimport { MeserosFormComponent } from './meseros/meseros-form/meseros-form.component';\r\nimport { EstadisticasComponent } from './estadisticas/estadisticas.component';\r\nimport { MeserosDeleteComponent } from './meseros/meseros-delete/meseros-delete.component';\r\n\r\nimport { MeserosService } from './meseros/meseros.service';\r\nimport { FacturasService } from './factura/facturas.service';\r\nimport { EstadisticasService } from './estadisticas/estadisticas.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    FacturaComponent,\r\n    MeserosComponent,\r\n    MeserosFormComponent,\r\n    EstadisticasComponent,\r\n    MeserosDeleteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'meseros', component: MeserosComponent },\r\n      { path: 'registrar-factura', component: FacturaComponent },\r\n      { path: 'estadisticas', component: EstadisticasComponent },\r\n      { path: 'meseros-agregar', component: MeserosFormComponent },\r\n      { path: 'meseros-editar/:idMesero', component: MeserosFormComponent },\r\n      { path: 'meseros-eliminar/:idMesero', component: MeserosDeleteComponent },\r\n    ])\r\n  ],\r\n  providers: [MeserosService, FacturasService, EstadisticasService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VzdGFkaXN0aWNhcy9lc3RhZGlzdGljYXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { IVentasMesero, IConsultaVentasMeseros, IConsumoClientes, IConsultaConsumoClientes, IConsultaProductoTop, IProductoTop } from './estadistica'\r\nimport { EstadisticasService } from './estadisticas.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-estadisticas',\r\n  templateUrl: './estadisticas.component.html',\r\n  styleUrls: ['./estadisticas.component.css']\r\n})\r\nexport class EstadisticasComponent implements OnInit {\r\n  public ventas: IVentasMesero[];\r\n  public consumos: IConsumoClientes[];\r\n  public productoTop: IProductoTop[];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private estadisticasService: EstadisticasService,\r\n    private router: Router) { }\r\n\r\n  formGroup: FormGroup;\r\n  formGroup1: FormGroup;\r\n  formGroup2: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.fb.group({\r\n      fechaVentasMeseros: ''\r\n    });\r\n\r\n    this.formGroup1 = this.fb.group({\r\n      fecha: '',\r\n      valor: ''\r\n    });\r\n\r\n    this.formGroup2 = this.fb.group({\r\n      fechaInicio: ''\r\n    });\r\n  }\r\n\r\n  consultarVentasMeseros() {\r\n    let consulta: IConsultaVentasMeseros = Object.assign({}, this.formGroup.value);\r\n    this.estadisticasService.getVentasMeseros(consulta.fechaVentasMeseros).\r\n      subscribe(ventas => this.ventas = ventas, error => console.error(error));\r\n  }\r\n\r\n  consultarConsumoClientes() {\r\n    let consulta: IConsultaConsumoClientes = Object.assign({}, this.formGroup1.value);\r\n    var valorConsulta = consulta.fecha.trim() + \",\" +consulta.valor.trim();\r\n    this.estadisticasService.getConsumosClientes(valorConsulta).\r\n      subscribe(consumos => this.consumos = consumos, error => console.error(error));\r\n  }\r\n\r\n  consultarProductosTop() {\r\n    let consulta: IConsultaProductoTop = Object.assign({}, this.formGroup2.value);\r\n    this.estadisticasService.getProductoTop(consulta.fechaInicio).\r\n      subscribe(productoTop => this.productoTop = productoTop, error => console.error(error));\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IVentasMesero, IConsumoClientes, IProductoTop } from './estadistica';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EstadisticasService {\r\n  private apiUrl = this.baseUrl + 'api/estadisticas';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  getVentasMeseros(fecha: string): Observable<IVentasMesero[]> {\r\n    console.log(fecha);\r\n    this.apiUrl = this.baseUrl + 'api/estadisticas/' + fecha;\r\n    console.log(this.apiUrl);\r\n    return this.http.get<IVentasMesero[]>(this.apiUrl);\r\n  }\r\n\r\n  getConsumosClientes(valorConsulta: string): Observable<IConsumoClientes[]> {\r\n    console.log(valorConsulta);\r\n    this.apiUrl = this.baseUrl + 'api/estadisticasconsumos/' + valorConsulta;\r\n    console.log(this.apiUrl);\r\n    return this.http.get<IConsumoClientes[]>(this.apiUrl);\r\n  }\r\n\r\n  getProductoTop(fecha: string): Observable<IProductoTop[]> {\r\n    console.log(fecha);\r\n    this.apiUrl = this.baseUrl + 'api/estadisticasproducto/' + fecha;\r\n    console.log(this.apiUrl);\r\n    return this.http.get<IProductoTop[]>(this.apiUrl);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { IFactura } from './factura';\r\nimport { FacturasService } from './facturas.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'factura-app',\r\n  templateUrl: \"./factura.component.html\"\r\n})\r\n\r\nexport class FacturaComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private facturasService: FacturasService,\r\n    private router: Router) { }\r\n\r\n  formGroup: FormGroup;\r\n  public numeroFactura: number;\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.fb.group({\r\n      idSupervisor: '',\r\n      idCliente: '',\r\n      nombres: '',\r\n      apellidos: '',\r\n      direccion: '',\r\n      telefono: '',\r\n      nroMesa: 1,\r\n      idMesero: 1,\r\n      detalles: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  agregarDetalle() {\r\n    let detalleArr = this.formGroup.get('detalles') as FormArray;\r\n    let detalleFG = this.construirDetalle();\r\n    detalleArr.push(detalleFG);\r\n  }\r\n\r\n  construirDetalle() {\r\n    return this.fb.group({\r\n      plato: '',\r\n      valor: '0'\r\n    });\r\n  }\r\n\r\n  removerDetalle(index: number) {\r\n    let detalles = this.formGroup.get('detalles') as FormArray;\r\n    detalles.removeAt(index);\r\n  }\r\n\r\n  save() {\r\n    let factura: IFactura = Object.assign({}, this.formGroup.value);\r\n\r\n    this.facturasService.createFactura(factura)\r\n      .subscribe(numeroFactura => this.numeroFactura = numeroFactura, error => console.error(error));\r\n\r\n    this.router.navigate([\"/registrar-factura\"]);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IFactura } from './factura';\r\n\r\n@Injectable()\r\nexport class FacturasService {\r\n  private apiUrl = this.baseUrl + 'api/facturas';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  createFactura(factura: IFactura): Observable<number> {\r\n    console.table(factura);\r\n    console.table(factura.detalles)\r\n    return this.http.post<number>(this.apiUrl, factura);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc2Vyb3MvbWVzZXJvcy1kZWxldGUvbWVzZXJvcy1kZWxldGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MeserosService } from '../meseros.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IMesero } from '../mesero';\r\n\r\n@Component({\r\n  selector: 'app-meseros-delete',\r\n  templateUrl: './meseros-delete.component.html',\r\n  styleUrls: ['./meseros-delete.component.css']\r\n})\r\nexport class MeserosDeleteComponent implements OnInit {\r\n\r\n  constructor(private meserosService: MeserosService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public meseroId: number;\r\n  public resultado: string;\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.meseroId = params[\"idMesero\"];\r\n      console.log(this.meseroId)\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    this.meserosService.deleteMesero(this.meseroId)\r\n      .subscribe(resultado => this.resultado = resultado, error => console.error(error));\r\n    this.router.navigate([\"/meseros\"]);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc2Vyb3MvbWVzZXJvcy1mb3JtL21lc2Vyb3MtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { IMesero } from '../mesero';\r\nimport { MeserosService } from '../meseros.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-meseros-form',\r\n  templateUrl: './meseros-form.component.html',\r\n  styleUrls: ['./meseros-form.component.css']\r\n})\r\nexport class MeserosFormComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private meserosService: MeserosService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  formGroup: FormGroup;\r\n  public modoEdicion: boolean = false;\r\n  public meseroId: number;\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.fb.group({\r\n      idMesero: '',\r\n      nombres: '',\r\n      apellidos: '',\r\n      edad: 1,\r\n      antiguedad: 0\r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params[\"idMesero\"] == undefined) {\r\n        return;\r\n      }\r\n      this.modoEdicion = true;\r\n      console.log(this.modoEdicion);\r\n      this.meseroId = params[\"idMesero\"];\r\n\r\n      this.formGroup.patchValue({\r\n        idMesero: this.meseroId,\r\n        nombres: '',\r\n        apellidos: '',\r\n        edad: 1,\r\n        antiguedad: 0\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  save() {\r\n    let mesero: IMesero = Object.assign({}, this.formGroup.value);\r\n    console.table(mesero);\r\n\r\n    if (this.modoEdicion) {\r\n      this.meserosService.updateMesero(mesero)\r\n        .subscribe((mesero => this.onSaveSuccess()), error => console.error(error));\r\n    }\r\n    else {\r\n      this.meserosService.createMesero(mesero)\r\n        .subscribe((mesero => this.onSaveSuccess()), error => console.error(error));\r\n    }\r\n  }\r\n\r\n  onSaveSuccess() {\r\n    this.router.navigate([\"/meseros\"]);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc2Vyb3MvbWVzZXJvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IMesero } from './mesero';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MeserosService } from './meseros.service';\r\n\r\n@Component({\r\n  selector: 'app-meseros',\r\n  templateUrl: './meseros.component.html',\r\n  styleUrls: ['./meseros.component.css']\r\n})\r\nexport class MeserosComponent {\r\n  public meseros: IMesero[];\r\n\r\n  constructor(private meserosService: MeserosService) { }\r\n\r\n  ngOnInit() {\r\n    this.meserosService.getMeseros()\r\n    .subscribe(meseros => this.meseros = meseros, error => console.error(error))\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IMesero } from './mesero';\r\n\r\n@Injectable()\r\nexport class MeserosService {\r\n  private apiUrl = this.baseUrl + 'api/meseros';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  getMeseros(): Observable<IMesero[]> {\r\n    return this.http.get<IMesero[]>(this.apiUrl);\r\n  }\r\n\r\n  createMesero(mesero: IMesero): Observable<IMesero> {\r\n    console.table(mesero);\r\n    return this.http.post<IMesero>(this.apiUrl, mesero);\r\n  }\r\n\r\n  updateMesero(mesero: IMesero): Observable<IMesero> {\r\n    console.table(mesero);\r\n    return this.http.put<IMesero>(this.apiUrl, mesero);\r\n  }\r\n\r\n  deleteMesero(mesero: number): Observable<string> {\r\n    console.table(mesero);\r\n    return this.http.get<string>(this.apiUrl + \"/\" + mesero.toString());\r\n  }\r\n\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}